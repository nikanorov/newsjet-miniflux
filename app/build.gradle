plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.21'
}

android {
    compileSdkVersion 34
    defaultConfig {
        applicationId 'com.nikanorov.newsjetminiflux'
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName '0.1'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        /*debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }*/
        release {
            storeFile file(MyReleaseKeyPath)
            storePassword signPassword
            keyAlias MyKeyAlias
            keyPassword signPassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Tests can be Robolectric or instrumented tests
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.7'
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/AL2.0', '/META-INF/LGPL2.1']
        }
    }

}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:$kotlin_datetime"

    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation 'androidx.paging:paging-compose:1.0.0-alpha16'
    debugImplementation "androidx.compose.ui:ui-tooling"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "androidx.activity:activity-compose:1.8.2"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"

    def nav_version = "2.7.6"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "androidx.window:window:1.2.0"

    //KTOR
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"

    //paging
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    implementation "io.insert-koin:koin-android:$koin_version"
    implementation("io.insert-koin:koin-androidx-compose:$koin_version")

    implementation ("androidx.webkit:webkit:1.9.0")

    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation "androidx.compose.ui:ui-test"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"

    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // Robolectric dependencies
    testImplementation "androidx.compose.ui:ui-test-junit4"
    testImplementation 'org.robolectric:robolectric:4.8.2'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        // Treat all Kotlin warnings as errors (disabled by default)
        allWarningsAsErrors = project.hasProperty("warningsAsErrors") ? project.warningsAsErrors : false

        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        // Enable experimental coroutines APIs, including Flow
        freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

        // Set JVM target to 1.8
        jvmTarget = "1.8"
    }
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
} 
